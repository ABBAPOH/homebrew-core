class GoLibrespot < Formula
  desc "Spotify client"
  homepage "https://github.com/devgianlu/go-librespot"
  url "https://github.com/devgianlu/go-librespot/archive/refs/tags/v0.3.3.tar.gz"
  sha256 "15678b4d6954b381fb9c5a84aca2b0d7706e4d0b2c3644bafcb79cea6d31064c"
  license "GPL-3.0-only"
  head "https://github.com/devgianlu/go-librespot.git", branch: "master"

  depends_on "go" => :build
  depends_on "pkgconf" => :build
  depends_on "libogg"
  depends_on "libvorbis"

  on_linux do
    depends_on "alsa-lib"
  end

  def install
    ldflags = %W[
      -s -w
      -X github.com/devgianlu/go-librespot.version=#{version}
    ]
    ldflags << "-X github.com/devgianlu/go-librespot.commit=#{Utils.git_short_head(length: 8)}" if build.head?

    system "go", "build", *std_go_args(output: bin/"go-librespot", ldflags: ldflags), "./cmd/daemon"

    # On macOS, create a minimal config that selects the correct backend.
    return unless OS.mac?

    (buildpath/"config.yml").write <<~YAML
      # Auto-generated by Homebrew. You can edit this file.
      # Use CoreAudio via AudioToolbox on macOS.
      audio_backend: audio-toolbox
    YAML
    pkgetc.install "config.yml"
  end

  def post_install
    (var/"log").mkpath
  end

  service do
    run [opt_bin/"go-librespot", "--config_dir", etc/"go-librespot"]
    keep_alive true
    log_path var/"log/go-librespot.log"
    error_log_path var/"log/go-librespot.log"
  end

  test do
    cfg = testpath/"config.yml"
    cfg.write <<~YAML
      volume_steps: not_a_number
    YAML

    output = shell_output("#{bin}/go-librespot --config_dir #{testpath} 2>&1", 1)
    assert_match "failed loading config", output
    assert_match "failed to unmarshal configuration", output
  end
end
